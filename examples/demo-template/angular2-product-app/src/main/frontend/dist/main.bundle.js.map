{"version":3,"sources":["webpack:///./src/app/keycloak/keycloak.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/keycloak/keycloak.http.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Injectable} from '@angular/core';\n\nimport { environment } from '../../environments/environment';\n\ndeclare var Keycloak: any;\n\n@Injectable()\nexport class KeycloakService {\n  static auth: any = {};\n\n  static init(): Promise<any> {\n    const keycloakAuth: any = Keycloak({\n      url: environment.keykloakBaseUrl,\n      realm: 'demo',\n      clientId: 'angular2-product',\n    });\n\n    KeycloakService.auth.loggedIn = false;\n\n    return new Promise((resolve, reject) => {\n      keycloakAuth.init({ onLoad: 'login-required' })\n      .success(() => {\n        KeycloakService.auth.loggedIn = true;\n        KeycloakService.auth.authz = keycloakAuth;\n        KeycloakService.auth.logoutUrl = keycloakAuth.authServerUrl\n          + '/realms/demo/protocol/openid-connect/logout?redirect_uri='\n          + document.baseURI;\n        resolve();\n      })\n      .error(() => {\n        reject();\n      });\n    });\n  }\n\n  logout() {\n    console.log('*** LOGOUT');\n    KeycloakService.auth.loggedIn = false;\n    KeycloakService.auth.authz = null;\n\n    window.location.href = KeycloakService.auth.logoutUrl;\n  }\n\n  getToken(): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (KeycloakService.auth.authz.token) {\n        KeycloakService.auth.authz\n          .updateToken(5)\n          .success(() => {\n            resolve(<string>KeycloakService.auth.authz.token);\n          })\n          .error(() => {\n            reject('Failed to refresh token');\n          });\n      } else {\n        reject('Not loggen in');\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/keycloak/keycloak.service.ts","export const environment = {\n  production: false,\n  keykloakBaseUrl: '/auth',\n  serviceBaseUrl: '/database'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 351;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 351\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { KeycloakService } from './app/keycloak/keycloak.service';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nKeycloakService.init()\n  .then(() => platformBrowserDynamic().bootstrapModule(AppModule))\n  .catch(e => window.location.reload());\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\nimport {Http, Headers, RequestOptions, Response} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport {KeycloakService} from './keycloak/keycloak.service';\n\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular2 Product';\n\n  products: string[] = [];\n\n  constructor(private http: Http, private kc: KeycloakService) {}\n\n  logout() {\n    this.kc.logout();\n  }\n\n  reloadData() {\n    this.http.get(environment.serviceBaseUrl + '/products')\n      .map(res => res.json())\n      .subscribe(prods => this.products = prods,\n        error => console.log(error));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { KeycloakService } from './keycloak/keycloak.service';\nimport { KeycloakHttp, KEYCLOAK_HTTP_PROVIDER } from './keycloak/keycloak.http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    KeycloakService,\n    KEYCLOAK_HTTP_PROVIDER\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {Http, Request, XHRBackend, ConnectionBackend, RequestOptions, RequestOptionsArgs, Response, Headers} from '@angular/http';\n\nimport {KeycloakService} from './keycloak.service';\nimport {Observable} from 'rxjs/Rx';\n\n/**\n * This provides a wrapper over the ng2 Http class that insures tokens are refreshed on each request.\n */\n@Injectable()\nexport class KeycloakHttp extends Http {\n  constructor(_backend: ConnectionBackend, _defaultOptions: RequestOptions, private _keycloakService: KeycloakService) {\n    super(_backend, _defaultOptions);\n  }\n\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    const tokenPromise: Promise<string> = this._keycloakService.getToken();\n    const tokenObservable: Observable<string> = Observable.fromPromise(tokenPromise);\n\n    if (typeof url === 'string') {\n      return tokenObservable.map(token => {\n        const authOptions = new RequestOptions({headers: new Headers({'Authorization': 'Bearer ' + token})});\n        return new RequestOptions().merge(options).merge(authOptions);\n      }).concatMap(opts => super.request(url, opts));\n    } else if (url instanceof Request) {\n      return tokenObservable.map(token => {\n        url.headers.set('Authorization', 'Bearer ' + token);\n        return url;\n      }).concatMap(request => super.request(request));\n    }\n  }\n}\n\nexport function keycloakHttpFactory(backend: XHRBackend, defaultOptions: RequestOptions, keycloakService: KeycloakService) {\n  return new KeycloakHttp(backend, defaultOptions, keycloakService);\n}\n\nexport const KEYCLOAK_HTTP_PROVIDER = {\n  provide: Http,\n  useFactory: keycloakHttpFactory,\n  deps: [XHRBackend, RequestOptions, KeycloakService]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/keycloak/keycloak.http.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 515\n// module chunks = 1","module.exports = \"<div id=\\\"content-area\\\" class=\\\"col-md-9\\\" role=\\\"main\\\">\\n  <div id=\\\"content\\\">\\n    <h1>{{title}}</h1>\\n    <h2><span>Products</span></h2>\\n    <button type=\\\"button\\\" (click)=\\\"logout()\\\">Sign Out</button>\\n    <button type=\\\"button\\\" id=\\\"reload-data\\\" (click)=\\\"reloadData()\\\">Reload</button>\\n    <table class=\\\"table\\\" [hidden]=\\\"!products.length\\\">\\n      <thead>\\n      <tr>\\n        <th>Product Listing</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let p of products\\\">\\n        <td>{{p}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 517\n// module chunks = 1"],"sourceRoot":""}